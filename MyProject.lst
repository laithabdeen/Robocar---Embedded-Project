;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 1/23/2023 9:52:29 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2833      	GOTO       51
_serial_interface:
;MyProject.c,135 :: 		void serial_interface(){
;MyProject.c,137 :: 		TXSTA = 0x20; //Asynchronous mode, Low power BRGH=0, 8-bit selection
0x0003	0x3020      	MOVLW      32
0x0004	0x1683      	BSF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x0098      	MOVWF      TXSTA
;MyProject.c,139 :: 		RCSTA = 0x90; // Serial port enable, continous recieve enabled, 8-bit selection
0x0007	0x3090      	MOVLW      144
0x0008	0x1283      	BCF        STATUS, 5
0x0009	0x0098      	MOVWF      RCSTA
;MyProject.c,141 :: 		SPBRG= 12; //Low power,, 9600 baudrate
0x000A	0x300C      	MOVLW      12
0x000B	0x1683      	BSF        STATUS, 5
0x000C	0x0099      	MOVWF      SPBRG
;MyProject.c,144 :: 		PIR1= PIR1 & 0xEF; //TXIF_bit=0;
0x000D	0x30EF      	MOVLW      239
0x000E	0x1283      	BCF        STATUS, 5
0x000F	0x058C      	ANDWF      PIR1, 1
;MyProject.c,145 :: 		PIR1= PIR1 & 0xDF;  //RCIF_bit=0;
0x0010	0x30DF      	MOVLW      223
0x0011	0x058C      	ANDWF      PIR1, 1
;MyProject.c,146 :: 		}
L_end_serial_interface:
0x0012	0x0008      	RETURN
; end of _serial_interface
_CCPPWM_init:
;MyProject.c,174 :: 		void CCPPWM_init(void){ //Configure CCP1 and CCP2 at 2ms period with 50% duty cycle
;MyProject.c,175 :: 		T2CON = 0x07;//enable Timer2 at Fosc/4 with 1:16 prescaler (8 uS percount 2000uS to count 250 counts)
0x0013	0x3007      	MOVLW      7
0x0014	0x1283      	BCF        STATUS, 5
0x0015	0x1303      	BCF        STATUS, 6
0x0016	0x0092      	MOVWF      T2CON
;MyProject.c,176 :: 		CCP1CON = 0x0C;//enable PWM for CCP1
0x0017	0x300C      	MOVLW      12
0x0018	0x0097      	MOVWF      CCP1CON
;MyProject.c,177 :: 		CCP2CON = 0x0C;//enable PWM for CCP2
0x0019	0x300C      	MOVLW      12
0x001A	0x009D      	MOVWF      CCP2CON
;MyProject.c,178 :: 		PR2 = 250;// 250 counts =8uS *250 =2ms period
0x001B	0x30FA      	MOVLW      250
0x001C	0x1683      	BSF        STATUS, 5
0x001D	0x0092      	MOVWF      PR2
;MyProject.c,179 :: 		TRISC = 0x00;
0x001E	0x0187      	CLRF       TRISC
;MyProject.c,180 :: 		CCPR1L= 125;
0x001F	0x307D      	MOVLW      125
0x0020	0x1283      	BCF        STATUS, 5
0x0021	0x0095      	MOVWF      CCPR1L
;MyProject.c,181 :: 		CCPR2L= 125;
0x0022	0x307D      	MOVLW      125
0x0023	0x009B      	MOVWF      CCPR2L
;MyProject.c,182 :: 		}
L_end_CCPPWM_init:
0x0024	0x0008      	RETURN
; end of _CCPPWM_init
_reciever:
;MyProject.c,162 :: 		unsigned char reciever(){
;MyProject.c,164 :: 		while(!RCIF);
L_reciever22:
;MyProject.c,166 :: 		PIR1= PIR1 & 0xDF;  //RCIF_bit=0;
0x0025	0x30DF      	MOVLW      223
0x0026	0x1283      	BCF        STATUS, 5
0x0027	0x1303      	BCF        STATUS, 6
0x0028	0x058C      	ANDWF      PIR1, 1
;MyProject.c,168 :: 		return RCREG;
0x0029	0x081A      	MOVF       RCREG, 0
0x002A	0x00F0      	MOVWF      R0
;MyProject.c,170 :: 		}
L_end_reciever:
0x002B	0x0008      	RETURN
; end of _reciever
_transmitter:
;MyProject.c,150 :: 		void transmitter(unsigned char tx) {
;MyProject.c,152 :: 		TXREG= tx;
0x002C	0x1283      	BCF        STATUS, 5
0x002D	0x1303      	BCF        STATUS, 6
0x002E	0x0823      	MOVF       FARG_transmitter_tx, 0
0x002F	0x0099      	MOVWF      TXREG
;MyProject.c,154 :: 		while (!TXIF);
L_transmitter20:
;MyProject.c,156 :: 		PIR1= PIR1 & 0xEF; //TXIF_bit=0;
0x0030	0x30EF      	MOVLW      239
0x0031	0x058C      	ANDWF      PIR1, 1
;MyProject.c,158 :: 		}
L_end_transmitter:
0x0032	0x0008      	RETURN
; end of _transmitter
_main:
;MyProject.c,25 :: 		void main(void){
;MyProject.c,29 :: 		TRISD=0x00;  // all as output
0x0033	0x1683      	BSF        STATUS, 5
0x0034	0x1303      	BCF        STATUS, 6
0x0035	0x0188      	CLRF       TRISD
;MyProject.c,31 :: 		TRISC=0xC0;  //tx=1,rx=1
0x0036	0x30C0      	MOVLW      192
0x0037	0x0087      	MOVWF      TRISC
;MyProject.c,33 :: 		adcon0=0;
0x0038	0x1283      	BCF        STATUS, 5
0x0039	0x019F      	CLRF       ADCON0
;MyProject.c,35 :: 		adcon1=0;
0x003A	0x1683      	BSF        STATUS, 5
0x003B	0x019F      	CLRF       ADCON1
;MyProject.c,37 :: 		PORTD=0;
0x003C	0x1283      	BCF        STATUS, 5
0x003D	0x0188      	CLRF       PORTD
;MyProject.c,39 :: 		CCPPWM_init();
0x003E	0x2013      	CALL       _CCPPWM_init
;MyProject.c,41 :: 		serial_interface();
0x003F	0x2003      	CALL       _serial_interface
;MyProject.c,47 :: 		while(1) {
L_main0:
;MyProject.c,49 :: 		result=reciever();
0x0040	0x2025      	CALL       _reciever
0x0041	0x0870      	MOVF       R0, 0
0x0042	0x00A0      	MOVWF      _result
;MyProject.c,51 :: 		transmitter(result);
0x0043	0x0870      	MOVF       R0, 0
0x0044	0x00A3      	MOVWF      FARG_transmitter_tx
0x0045	0x202C      	CALL       _transmitter
;MyProject.c,55 :: 		if(result == 'F')
0x0046	0x0820      	MOVF       _result, 0
0x0047	0x3A46      	XORLW      70
0x0048	0x1D03      	BTFSS      STATUS, 2
0x0049	0x284D      	GOTO       L_main2
;MyProject.c,59 :: 		PORTD= 0x55;
0x004A	0x3055      	MOVLW      85
0x004B	0x0088      	MOVWF      PORTD
;MyProject.c,61 :: 		}
0x004C	0x2883      	GOTO       L_main3
L_main2:
;MyProject.c,63 :: 		else if( result == 'R')
0x004D	0x0820      	MOVF       _result, 0
0x004E	0x3A52      	XORLW      82
0x004F	0x1D03      	BTFSS      STATUS, 2
0x0050	0x2854      	GOTO       L_main4
;MyProject.c,67 :: 		PORTD= 0xAA;
0x0051	0x30AA      	MOVLW      170
0x0052	0x0088      	MOVWF      PORTD
;MyProject.c,69 :: 		}
0x0053	0x2883      	GOTO       L_main5
L_main4:
;MyProject.c,71 :: 		else if ( result == 'W')
0x0054	0x0820      	MOVF       _result, 0
0x0055	0x3A57      	XORLW      87
0x0056	0x1D03      	BTFSS      STATUS, 2
0x0057	0x285B      	GOTO       L_main6
;MyProject.c,75 :: 		PORTD = 0x41;
0x0058	0x3041      	MOVLW      65
0x0059	0x0088      	MOVWF      PORTD
;MyProject.c,77 :: 		}
0x005A	0x2883      	GOTO       L_main7
L_main6:
;MyProject.c,79 :: 		else if ( result == 'L')
0x005B	0x0820      	MOVF       _result, 0
0x005C	0x3A4C      	XORLW      76
0x005D	0x1D03      	BTFSS      STATUS, 2
0x005E	0x2862      	GOTO       L_main8
;MyProject.c,83 :: 		PORTD = 0x14;
0x005F	0x3014      	MOVLW      20
0x0060	0x0088      	MOVWF      PORTD
;MyProject.c,85 :: 		}
0x0061	0x2883      	GOTO       L_main9
L_main8:
;MyProject.c,87 :: 		else if ( result == 'S')
0x0062	0x0820      	MOVF       _result, 0
0x0063	0x3A53      	XORLW      83
0x0064	0x1D03      	BTFSS      STATUS, 2
0x0065	0x2868      	GOTO       L_main10
;MyProject.c,91 :: 		PORTD = 0x00;
0x0066	0x0188      	CLRF       PORTD
;MyProject.c,93 :: 		}
0x0067	0x2883      	GOTO       L_main11
L_main10:
;MyProject.c,95 :: 		else if ( result == 'Q')
0x0068	0x0820      	MOVF       _result, 0
0x0069	0x3A51      	XORLW      81
0x006A	0x1D03      	BTFSS      STATUS, 2
0x006B	0x286F      	GOTO       L_main12
;MyProject.c,99 :: 		CCPR1L = 64; //set dutycycle 25%
0x006C	0x3040      	MOVLW      64
0x006D	0x0095      	MOVWF      CCPR1L
;MyProject.c,101 :: 		}
0x006E	0x2883      	GOTO       L_main13
L_main12:
;MyProject.c,103 :: 		else if ( result == 'T')
0x006F	0x0820      	MOVF       _result, 0
0x0070	0x3A54      	XORLW      84
0x0071	0x1D03      	BTFSS      STATUS, 2
0x0072	0x2876      	GOTO       L_main14
;MyProject.c,107 :: 		CCPR1L = 128;  //set dutycycle 50%
0x0073	0x3080      	MOVLW      128
0x0074	0x0095      	MOVWF      CCPR1L
;MyProject.c,109 :: 		}
0x0075	0x2883      	GOTO       L_main15
L_main14:
;MyProject.c,111 :: 		else if ( result == 'E')
0x0076	0x0820      	MOVF       _result, 0
0x0077	0x3A45      	XORLW      69
0x0078	0x1D03      	BTFSS      STATUS, 2
0x0079	0x287D      	GOTO       L_main16
;MyProject.c,115 :: 		CCPR1L = 192;  //set dutycycle 75%
0x007A	0x30C0      	MOVLW      192
0x007B	0x0095      	MOVWF      CCPR1L
;MyProject.c,117 :: 		}
0x007C	0x2883      	GOTO       L_main17
L_main16:
;MyProject.c,119 :: 		else if ( result == 'Z')
0x007D	0x0820      	MOVF       _result, 0
0x007E	0x3A5A      	XORLW      90
0x007F	0x1D03      	BTFSS      STATUS, 2
0x0080	0x2883      	GOTO       L_main18
;MyProject.c,123 :: 		CCPR1L = 255;  //set dutycycle 100%
0x0081	0x30FF      	MOVLW      255
0x0082	0x0095      	MOVWF      CCPR1L
;MyProject.c,125 :: 		}
L_main18:
L_main17:
L_main15:
L_main13:
L_main11:
L_main9:
L_main7:
L_main5:
L_main3:
;MyProject.c,129 :: 		}
0x0083	0x2840      	GOTO       L_main0
;MyProject.c,131 :: 		}
L_end_main:
0x0084	0x2884      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [16]    _serial_interface
0x0013      [18]    _CCPPWM_init
0x0025       [7]    _reciever
0x002C       [7]    _transmitter
0x0033      [82]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000C       [1]    PIR1
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [1]    CCPR2L
0x001D       [1]    CCP2CON
0x001F       [1]    ADCON0
0x0020       [1]    _result
0x0021       [2]    ___DoICPAddr
0x0023       [1]    FARG_transmitter_tx
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x0092       [1]    PR2
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009F       [1]    ADCON1
